services:
  directus:
    image: directus/directus:latest
    container_name: gifhow-directus
    ports:
      - "10001:8055"
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      PUBLIC_URL: ${PUBLIC_URL}
      DB_CLIENT: mysql
      DB_HOST: mariadb
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET: ${SECRET}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      FILES_MAX_UPLOAD_SIZE: 500mb
      FILES_MIME_TYPE_ALLOW_LIST: array:image/*,video/*
      CORS_ENABLED: "true"
      CORS_ORIGIN: ${CORS_ORIGIN}
    volumes:
      - ./directus/extensions:/directus/extensions
      - ./directus/uploads:/directus/uploads
    networks:
      - hownet

  mariadb:
    image: mariadb:latest
    container_name: gifhow-mariadb
    hostname: mariadb
    ports:
      - "127.0.0.1:10002:3306"
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_PASSWORD}
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      interval: 4s
      retries: 3
    volumes:
      - storage:/var/lib/mysql
      - ./config/mariadb-init:/docker-entrypoint-initdb.d:ro
    networks:
      - hownet

  prometheus:
    image: prom/prometheus:latest
    container_name: gifhow-prometheus
    ports:
      - "10004:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/prometheus:/etc/prometheus
    networks:
      - hownet

  loki:
    image: grafana/loki:latest
    container_name: gifhow-loki
    ports:
      - "10005:3100"
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./config/loki:/etc/loki
    networks:
      - loki

  promtail:
    image: grafana/promtail:latest
    container_name: gifhow-promtail
    volumes:
      - /var/log:/var/log
      - ./config/promtail:/etc/promtail
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - loki

  adminer:
    image: adminer:latest
    container_name: gifhow-adminer
    ports:
      - "10003:8080"
    depends_on:
      - mariadb
    environment:
      ADMINER_DEFAULT_SERVER: mariadb
    networks:
      - hownet
  grafana:
    image: grafana/grafana:latest
    container_name: gifhow-grafana
    ports:
      - "10006:3000"
    environment:
      GF_PATHS_CONFIG: "/etc/grafana/custom.ini"
      GF_FEATURE_TOGGLES_ENABLE: "alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode"

    volumes:
      - ./config/grafana/custom.ini:/etc/grafana/custom.ini
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            access: proxy
            orgId: 1
            url: http://loki:3100
            basicAuth: true
            isDefault: true
            version: 1
            editable: false
        EOF
        /run.sh
    networks:
      - loki
      - hownet

  typesense:
    image: typesense/typesense:28.0
    restart: on-failure
    container_name: gifhow-typesense
    ports:
      - "10007:8108"
    environment:
      TYPESENSE_DATA_DIR: /data
      TYPESENSE_API_KEY: ${TYPESENSE_API_KEY}
      TYPESENSE_ENABLE_CORS: "true"
    volumes:
      - ./typesense:/data
    networks:
      - loki
      - hownet

  sync_service:
    container_name: gifhow-sync-service
    build:
      context: ./sync-service
      dockerfile: Dockerfile
    environment:
      - TZ=${TZ}
    volumes:
      - ./logs:/logs
    depends_on:
      mariadb:
        condition: service_healthy
      typesense:
        condition: service_started
    restart: always
    networks:
      - hownet

networks:
  hownet:
    name: hownet
    external: true
  loki:
    driver: bridge

volumes:
  storage:
